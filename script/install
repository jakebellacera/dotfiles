#!/bin/sh

# set args
while :; do
  case $1 in
    --skip-macos) SKIP_MACOS=true
    ;;
    --skip-homebrew) SKIP_HOMEBREW=true
    ;;
    --skip-zsh) SKIP_ZSH=true
    ;;
    --skip-git) SKIP_GIT=true
    ;;
    --skip-vim) SKIP_VIM=true
    ;;
    *) break
  esac
  shift
done

# colored text helpers
echo_warning () {
  echo "$(tput setaf 3)$1$(tput sgr 0)"
}
echo_success () {
  echo "$(tput setaf 2)$1$(tput sgr 0)"
}

# cd into current directory
cd $(dirname "$0")/..

# install homebrew & dependencies
if [ "$SKIP_HOMEBREW" == true ]; then
  echo_warning "Skipping homebrew install & dependencies"
else
  echo "Checking to see if we need to install homebrew..."
  if [ ! -x /usr/local/bin/brew ]; then
    echo "Installing homebrew..."
    ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
  fi

  echo "Installing homebrew dependencies..."
  brew bundle
fi

# zsh
if [ "$SKIP_ZSH" == true ]; then
  echo_warning "Skipping ZSH configuration"
else
  echo "Installing oh-my-zsh..."
  sh -c "$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"

  echo "Configuring zsh..."
  ZSH_CONFIG_PATH=$HOME/.zsh_config
  ZSH_CONFIG_LINE="source $ZSH_CONFIG_PATH"
  ZSH_RC=$HOME/.zshrc
  ln -nfs "$(pwd)/zsh/config" $ZSH_CONFIG_PATH
  grep -qxF "$ZSH_CONFIG_LINE" "$ZSH_RC" || echo "$ZSH_CONFIG_LINE" >> "$ZSH_RC"
fi

# git
if [ "$SKIP_GIT" == true ]; then
  echo_warning "Skipping git configuration"
else
  echo "Configuring git..."
  
  # Global gitignore
  ln -nfs "$(pwd)/git/gitignore_global" ~/.gitignore_global
  git config --global core.excludesfile ~/.gitignore_global
  
  # Prevent vim from opening when running `git branch`
  git config --global pager.branch false
fi

# vim
if [ "$SKIP_VIM" == true ]; then
  echo_warning "Skipping vim configuration"
else
  echo "Setting up vim..."
  git submodule init
  git submodule update
  ln -nfs "$(pwd)/vim/.vim" ~/.vim
  ln -nfs "$(pwd)/vim/vimrc" ~/.vimrc
  ln -nfs "$(pwd)/vim/gvimrc" ~/.gvimrc
  vim +PluginInstall +qall
fi

echo_success "✓ Dotfiles install complete!"
echo "You may now set up your git config now if you haven’t already."
